#K-Nearest Neighbor (KNN)
# Load necessary libraries
library(class)  # For KNN algorithm
library(datasets)  # For the Iris dataset
library(caret)  # For model evaluation

# Load the Iris dataset
data(iris)

# Split the dataset into training and testing sets
set.seed(42)

trainIndex <- createDataPartition(iris$Species, p = 0.8, list = FALSE)
trainData <- iris[trainIndex, ]
testData <- iris[-trainIndex, ]

# Prepare the data for the model
trainX <- trainData[, -5]  # Exclude the target variable 'Species'
trainY <- trainData$Species
testX <- testData[, -5]
testY <- testData$Species

# Train the KNN model (with K=3)
k <- 3
knn_model <- knn(train = trainX, test = testX, cl = trainY, k = k)

# Evaluate the model
confMatrix <- confusionMatrix(knn_model, testY)
print(confMatrix)

# Calculate the accuracy
accuracy <- sum(knn_model == testY) / length(testY)
cat("Accuracy:", accuracy * 100, "%\n")

# Plotting the results (For the first two features)
plot(testX[, 1], testX[, 2], col = as.factor(knn_model), pch = 19, 
     xlab = "Feature 1", ylab = "Feature 2", main = "KNN Classification")
legend("topright", legend = levels(testY), fill = 1:length(levels(testY)))
